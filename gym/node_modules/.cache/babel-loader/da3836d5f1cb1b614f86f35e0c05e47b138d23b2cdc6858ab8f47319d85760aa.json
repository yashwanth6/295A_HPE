{"ast":null,"code":"import React from'react';import{Typography,Box,Stack}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExerciseVideo=function ExerciseVideo(_ref){var _exerciseVideos$slice;var exerciseVideos=_ref.exerciseVideos,name=_ref.name;console.log(exerciseVideos);if(!exerciseVideos.length)return'loading...';return/*#__PURE__*/_jsxs(Box,{sx:{marginTop:{lg:'200px',xs:'20px'}},p:\"20px\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{fontSize:{lg:'44px',xs:'25px'}},fontWeight:700,color:\"#000\",mb:\"33px\",children:[\"Watch \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#dda0dd',textTransform:'capitalize'},children:name}),\" exercise videos\"]}),/*#__PURE__*/_jsx(Stack,{sx:{flexDirection:{lg:'row'},gap:{lg:'110px',xs:'0px'}},justifyContent:\"flex-start\",flexWrap:\"wrap\",alignItems:\"center\",children:exerciseVideos===null||exerciseVideos===void 0?void 0:(_exerciseVideos$slice=exerciseVideos.slice(0,6))===null||_exerciseVideos$slice===void 0?void 0:_exerciseVideos$slice.map(function(item,index){return/*#__PURE__*/_jsxs(\"a\",{className:\"exercise-video\",href:\"https://www.youtube.com/watch?v=\".concat(item.video.videoId),target:\"_blank\",rel:\"noreferrer\",children:[/*#__PURE__*/_jsx(\"img\",{src:item.video.thumbnails[0].url,alt:item.video.title,style:{borderTopLeftRadius:'20px'}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{fontSize:{lg:'28px',xs:'18px'}},fontWeight:600,color:\"#000\",children:item.video.title}),/*#__PURE__*/_jsx(Typography,{fontSize:\"14px\",color:\"#000\",children:item.video.channelName})]})]},index);})})]});};export default ExerciseVideo;","map":{"version":3,"names":["React","Typography","Box","Stack","jsx","_jsx","jsxs","_jsxs","ExerciseVideo","_ref","_exerciseVideos$slice","exerciseVideos","name","console","log","length","sx","marginTop","lg","xs","p","children","variant","fontSize","fontWeight","color","mb","style","textTransform","flexDirection","gap","justifyContent","flexWrap","alignItems","slice","map","item","index","className","href","concat","video","videoId","target","rel","src","thumbnails","url","alt","title","borderTopLeftRadius","channelName"],"sources":["/Users/vinay/Desktop/gym/src/components/ExerciseVideos.js"],"sourcesContent":["import React from 'react'\nimport { Typography, Box, Stack } from '@mui/material';\n\n\nconst ExerciseVideo = ({ exerciseVideos, name }) => {\n\n  console.log(exerciseVideos);\n  if (!exerciseVideos.length) return 'loading...';\n  return (\n    <Box sx={{ marginTop: { lg: '200px', xs: '20px' } }} p=\"20px\">\n      <Typography variant =\"h4\" sx={{ fontSize: { lg: '44px', xs: '25px' } }} fontWeight={700} color=\"#000\" mb=\"33px\">\n        Watch <span style={{ color: '#dda0dd', textTransform: 'capitalize' }}>{name}</span> exercise videos\n      </Typography>\n      <Stack sx={{ flexDirection: { lg: 'row' }, gap: { lg: '110px', xs: '0px' } }} \n      justifyContent=\"flex-start\" flexWrap=\"wrap\" alignItems=\"center\">\n        {exerciseVideos?.slice(0, 6)?.map((item, index) => (\n          <a\n            key={index}\n            className=\"exercise-video\"\n            href={`https://www.youtube.com/watch?v=${item.video.videoId}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <img src={item.video.thumbnails[0].url} alt={item.video.title} style={{ borderTopLeftRadius: '20px' }}   />\n            <Box>\n              <Typography variant =\"h4\" sx={{ fontSize: { lg: '28px', xs: '18px' } }} fontWeight={600} color=\"#000\">\n                {item.video.title}\n              </Typography>\n              <Typography fontSize=\"14px\" color=\"#000\">\n                {item.video.channelName}\n              </Typography>\n            </Box>\n          </a>\n        ))}\n      </Stack>\n    </Box>\n  )\n}\n\nexport default ExerciseVideo"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,CAAEC,GAAG,CAAEC,KAAK,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGvD,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAAC,IAAA,CAAiC,KAAAC,qBAAA,IAA3B,CAAAC,cAAc,CAAAF,IAAA,CAAdE,cAAc,CAAEC,IAAI,CAAAH,IAAA,CAAJG,IAAI,CAE3CC,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC,CAC3B,GAAI,CAACA,cAAc,CAACI,MAAM,CAAE,MAAO,YAAY,CAC/C,mBACER,KAAA,CAACL,GAAG,EAACc,EAAE,CAAE,CAAEC,SAAS,CAAE,CAAEC,EAAE,CAAE,OAAO,CAAEC,EAAE,CAAE,MAAO,CAAE,CAAE,CAACC,CAAC,CAAC,MAAM,CAAAC,QAAA,eAC3Dd,KAAA,CAACN,UAAU,EAACqB,OAAO,CAAE,IAAI,CAACN,EAAE,CAAE,CAAEO,QAAQ,CAAE,CAAEL,EAAE,CAAE,MAAM,CAAEC,EAAE,CAAE,MAAO,CAAE,CAAE,CAACK,UAAU,CAAE,GAAI,CAACC,KAAK,CAAC,MAAM,CAACC,EAAE,CAAC,MAAM,CAAAL,QAAA,EAAC,QACxG,cAAAhB,IAAA,SAAMsB,KAAK,CAAE,CAAEF,KAAK,CAAE,SAAS,CAAEG,aAAa,CAAE,YAAa,CAAE,CAAAP,QAAA,CAAET,IAAI,EAAQ,mBACrF,GAAa,cACbP,IAAA,CAACF,KAAK,EAACa,EAAE,CAAE,CAAEa,aAAa,CAAE,CAAEX,EAAE,CAAE,KAAM,CAAC,CAAEY,GAAG,CAAE,CAAEZ,EAAE,CAAE,OAAO,CAAEC,EAAE,CAAE,KAAM,CAAE,CAAE,CAC7EY,cAAc,CAAC,YAAY,CAACC,QAAQ,CAAC,MAAM,CAACC,UAAU,CAAC,QAAQ,CAAAZ,QAAA,CAC5DV,cAAc,SAAdA,cAAc,kBAAAD,qBAAA,CAAdC,cAAc,CAAEuB,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,UAAAxB,qBAAA,iBAA3BA,qBAAA,CAA6ByB,GAAG,CAAC,SAACC,IAAI,CAAEC,KAAK,qBAC5C9B,KAAA,MAEE+B,SAAS,CAAC,gBAAgB,CAC1BC,IAAI,oCAAAC,MAAA,CAAqCJ,IAAI,CAACK,KAAK,CAACC,OAAO,CAAG,CAC9DC,MAAM,CAAC,QAAQ,CACfC,GAAG,CAAC,YAAY,CAAAvB,QAAA,eAEhBhB,IAAA,QAAKwC,GAAG,CAAET,IAAI,CAACK,KAAK,CAACK,UAAU,CAAC,CAAC,CAAC,CAACC,GAAI,CAACC,GAAG,CAAEZ,IAAI,CAACK,KAAK,CAACQ,KAAM,CAACtB,KAAK,CAAE,CAAEuB,mBAAmB,CAAE,MAAO,CAAE,EAAK,cAC3G3C,KAAA,CAACL,GAAG,EAAAmB,QAAA,eACFhB,IAAA,CAACJ,UAAU,EAACqB,OAAO,CAAE,IAAI,CAACN,EAAE,CAAE,CAAEO,QAAQ,CAAE,CAAEL,EAAE,CAAE,MAAM,CAAEC,EAAE,CAAE,MAAO,CAAE,CAAE,CAACK,UAAU,CAAE,GAAI,CAACC,KAAK,CAAC,MAAM,CAAAJ,QAAA,CAClGe,IAAI,CAACK,KAAK,CAACQ,KAAK,EACN,cACb5C,IAAA,CAACJ,UAAU,EAACsB,QAAQ,CAAC,MAAM,CAACE,KAAK,CAAC,MAAM,CAAAJ,QAAA,CACrCe,IAAI,CAACK,KAAK,CAACU,WAAW,EACZ,GACT,GAdDd,KAAK,CAeR,EACL,CAAC,EACI,GACJ,CAEV,CAAC,CAED,cAAe,CAAA7B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}